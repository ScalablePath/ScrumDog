<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SdProject extends BaseSdProject
{
  
  public function addUser($user)
  { 
    if($user->isProjectUser($this->getId()))
    {
      return false;
    }
    else
    {
      $projectUser = new SdProjectUser();
      $projectUser->setProjectId($this->getId());
      $projectUser->setUserId($user->getId());
      $projectUser->setRole(2);
      $projectUser->save();

      return $projectUser;
    }
  }

  public function confirmProjectUser($projectUser)
  {
    $projects =  Doctrine_Query::create()
				 ->select('pu.*')
				 ->from('SdProjectUser pu')
				 ->where('pu.user_id = ?', $this->getId())
				 ->andWhere('pu.project_id = ?', $projectId)
				 ->execute();	

	$projectUser->setRole(2);
	$result = $projectUser->save();
	return $result;
  }

  public function addUsername($username)
  {
    $user = SdUserTable::retrieveByUsername($username, true); 

    if(!$user)
    {
      $result = false;
    }
    else
    {
      $result = $this->addUser($user); 
    }
    return $result;
  }
  
  public function getProjectUsers()
  {
  	$projectUsers = Doctrine_Query::create()
				   ->from('SdProjectUser pu')
				   ->where('pu.project_id = ?', $this->getId())
				   ->execute();

    return $projectUsers;
  }

  public function getActiveProjectUsers($options = array())
  {
    $q = Doctrine_Query::create()
			   ->from('SdProjectUser pu')
			   ->where('pu.project_id = ?', $this->getId())
			   ->andWhere('pu.role > ?', SdProjectUserTable::INVITED);

	if(!isset($options['join_users']) || (isset($options['join_users']) && $options['join_users']==false))
	{
		$q->innerJoin('pu.User SdUser u');
		$q->orderby('u.full_name ASC');
	}

	$projectUsers = $q->execute();
    
	return $projectUsers;
  }

  public function getPendingProjectUsers()
  {
  	$invitations = Doctrine_Query::create()
				   ->from('SdInvitation i')
				   ->where('i.project_id = ?', $this->getId())
				   ->andWhere('i.status <= ?', SdInvitationTable::SEND)
				   ->andWhere('i.invitee_email is NULL')
				   ->execute();

    return $invitations;
  }
  
  public function getPendingProjectUsersNotRegistered()
  {
  	$invitations = Doctrine_Query::create()
				   ->from('SdInvitation i')
				   ->where('i.project_id = ?', $this->getId())
				   ->andWhere('i.status = ?', SdInvitationTable::SEND)
				   ->andWhere('i.invitee_email is not NULL')
				   ->execute();

    return $invitations;
  }

  public function getOwner()
  {
	$projectUser = Doctrine_Query::create()
				   ->from('SdProjectUser pu')
				   ->where('pu.project_id = ?', $this->getId())
				   ->andWhere('pu.role = ?', SdProjectUserTable::OWNER)
				   ->fetchOne();

	$owner = Doctrine::getTable('SdUser')->find($projectUser->getUserId());
    
	return $owner;
  }

  public function getSprints(Criteria $c = NULL)
  {
	$sprints = Doctrine_Query::create()
				   ->select('s.*')
				   ->from('SdSprint s')
				   ->where('s.project_id = ?', $this->getId())
				   ->execute();	

    return $sprints;
  }

  public function getActiveSprints()
  {  
    $sprints = Doctrine_Query::create()
				   ->select('s.*')
				   ->from('SdSprint s')
				   ->where('s.active = true')
				   ->andWhere('s.project_id = ?', $this->getId())
				   ->execute();	

    return $sprints;
  }
  
}