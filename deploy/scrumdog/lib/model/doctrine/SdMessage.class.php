<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class SdMessage extends BaseSdMessage
{
    // Override save() function
	public function save(Doctrine_Connection $conn = null, $recordHistory = true)
	{
		if(!$this->isNew() && $recordHistory)
		{
			$this->doHistoryMagic();
		}
		else
		{
			parent::save($conn); 
		}
	}
	
	// function to get old and new object value
	public function doHistoryMagic()
	{
		$modifiedArray = $this->getModified();
		$ObjPrevious = Doctrine::getTable('SdMessage')->find($this->getId());
		foreach($modifiedArray as $modifiedField => $newValue)
		{
		   $functionName = "";
		   $appendString = "";
		   $changeType = $modifiedField;		   
		   if(in_array($modifiedField, array()))
		   {
				$appendString = 'Text';	
		   }
		   if($modifiedField != 'UPDATED_AT')
		   {
			   if(strpos('_', $modifiedField))
			   {   
				   $fieldNameArray = explode('_', $modifiedField); 
				   foreach($fieldNameArray as $fieldNamePart)
				   {
						$functionName .= ucfirst(strtolower($fieldNamePart));
				   }
			   } 
			   else
			   {
					$functionName = ucfirst(strtolower($modifiedField));
			   }
			   
				//see if it's an Id
				$oldId = $ObjPrevious->{'get'.$functionName}(); 
				if(!is_integer($oldId))
					$oldId = NULL;
				$newId = $this->{'get'.$functionName}();
				if(!is_integer($newId))
					$newId = NULL;
				
				$oldValue = $ObjPrevious->{'get'.$functionName.$appendString}();
				if($appendString == 'Text')
					$newValueStr = $this->{'get'.$functionName.$appendString}($newValue);
				else
					$newValueStr = $newValue;
				if(trim($oldValue)!=trim($newValueStr))
				{
					if($modifiedField=='user_id')
						$this->sendAssignmentEmail($newValue, false);
					$this->saveMessageHistory($changeType, $oldValue, $newValueStr, $oldId, $newId);
				}
				$ObjPrevious->{'set'.$functionName}($newValue);   
		   }
		}
		if(!empty($modifiedArray)){
			$ObjPrevious->save(null, false);
		}
	}
	
	// Saves all message history
	function saveMessageHistory($changeType, $oldValue = '', $newValue = '', $oldId = NULL, $newId = NULL)
	{
		$userId = sfContext::getInstance()->getUser()->getId();
	   $messageHistory = new SdMessageHistory();
	   $messageHistory->setMessageId($this->getId());
	   $messageHistory->setUserId($userId);
	   $messageHistory->setChangeType($changeType);
	   $messageHistory->setPreviousValue($oldValue);
	   $messageHistory->setNewValue($newValue);
	   $messageHistory->setPreviousId($oldId);
	   $messageHistory->setNewId($newId);
	   $messageHistory->save();
	}
	
	/*
	* @author Damien Filiatrault
	* @return string
	*/

	public function getSummary($chars = 200)
	{
		$result = $this->getContent();
		
		if(strlen($result)>$chars)
		{
			$result = substr($result,0,$chars).'...';
		}
		
		return $result;
	}
}